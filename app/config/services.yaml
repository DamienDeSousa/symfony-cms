# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    icon_directory: 'uploads/icon/'
    full_icon_directory_path: '%kernel.project_dir%/public/%icon_directory%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:               # bind the following variables for all the project
            $fullIconDirectoryPath: '%full_icon_directory_path%'
            $iconDirectory: '%icon_directory%'
            $directoryPath: '%kernel.project_dir%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Security\UserRoles:
        arguments:
            $roles: '%security.role_hierarchy.roles%'

    # Decorators
    App\Decorator\Fos\UserBundle\Command\PromoteUserCommand:
        decorates:
            'fos_user.command.promote_user'
        arguments:
            $manipulator: '@fos_user.util.user_manipulator'

    App\Decorator\Fos\UserBundle\Command\DemoteUserCommand:
        decorates:
            'fos_user.command.demote_user'
        arguments:
            $manipulator: '@fos_user.util.user_manipulator'

    App\Decorator\Security\Admin\CaptchaLoginFormDecorator:
        decorates:
            'App\Security\Admin\LoginFormAuthenticator'
        arguments:
            $botDetectCaptcha: '@captcha'
    
    # the suffix 'admin' refers to the admin section in security.yaml
    # for each new firewall on login page, there will be a new service named
    # security.authentication.form_entry_point.<the name of your firewall>
    App\Decorator\Security\EntryPoint\FormAuthenticationEntryPoint404:
        decorates: 'security.authentication.form_entry_point.admin'

    # Controllers
    App\Controller\Admin\Security\Login:
        arguments:
            $botDetectCaptcha: '@captcha'

    # Listeners
    App\EventListener\BlockType\PreRemoveBlockTypeListener:
        tags:
            - { name: 'doctrine.orm.entity_listener', event: 'preRemove', entity: 'App\Entity\Structure\BlockType' }
